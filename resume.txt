- 01:50 Pengenalan Eloquent
- 07:00 Buat Project
- 08:20 Buat Database
- 11:20 Model
    - php artisan make:model NamaModel
- 25:20 Insert
    - save();
- 29:45 Query Builder
    - static method query();
    - ex : User::query();
- 32:27 Insert Many
- 39:10 Find
    - find() : menemukan satu data dengan primary key.
- 43:30 Update
    - update() / save().
    - atau gunakan new dengan atribut $exists set ke true.
- 47:50 Select
- 52:55 Update Many
- 56:35 Delete
    - delete().
    - gunakan find sebelum delete.
- 58:45 Delete Many
- 01:01:10 UUID
    - UUID selain primary key -> override methods uniqueIds() pada trait HasUuids.
- 01:12:30 Timestamps
- 01:21:55 Default Attribute Values
    - $attibutes = []
- 01:25:55 Fillable Attributes
    - $fillable = []
- 01:35:00 Update Model
    - fill()
- 01:37:55 Soft Delete
    - delete() : melakukan soft delete.
    - forceDelete() : menghapus / delete data dari table secara permanen.
    - withTrashed() : Mengambil semua data termasuk yang sudah di softDelete.
- 01:51:00 Query Scope
    - Global Scope
    - Local Scope
- 01:52:05 Query Global Scope
    - php artisan make:scope NamaScope
    - override method booted()
    - gunakan method addGlobalScope()
    - withoutGlobalScopes([]) : untuk mematikan globalscope yang dibuat.
- 02:03:40 Query Local Scope
    - tambahkan methid di model dengan prefix scopeNamaMethod()
    - untuk menggunakan local scope panggil methodnya tanpa prefix scope dan dengan diawali lowecase.
- 02:11:55 Relationships
    - 02:13:10 One to One
        - hasOne()
        - belongsTo() pada model sebaliknya jika ingin relasi bidirectional antar model.
    - 02:30:25 One to Many
        - hasMany()
        - belongsTo() sebagai bidirectionalnya.
    - 02:43:40 Query Builder Pada Relationship.
    - 02:54:15 Has One of Many.
        - digunakan untuk mengambil salah satu data pada relasi one to many, seperti mengambil product termurah / termahal disebuah.
    - 03:02:15 Has One Through.
        - contoh customer punya satu wallet dan wallet punya satu virtual account.
        - format :
        public function model3(): HasOneThrough
        {
            return $this->HasOneThrough(Model3::class, Model2::class, "ForeignKeyModel2", "ForeignKeyModel3", "PrimaryKeyModel1", "PrimaryKeyModel2");
        }
    - 03:15:35 Has Many Through
    - 03:30:35 Many to Many
        - belongsToMany() pada kedua model.
        - buat tabel jembatan
        - attach() untuk melakukan insert.
        - detach() untuk melakukan delete ke table.
    - 03:44:50 Intermediate Table
        - withPivot() digunakan untuk menyertakan kolom yang ingin ikut diquery, ditambahkan pada relasi BelongsToMany.
        - wherePivot() digunakan untuk Filtering via intermediate Table
    - 03:56:20  Pivot Model
        - extends Class Pivot
    - 04:08:40 Polymporphic Relationship
        - 04:10:35 One to One Polymporphic
        - 04:25:05 One to Many Polymporphic
        - 04:35:15 One of Many Polymporphic
        - 04:39:20 Many to Many Polymporphic
        - 04:52:35 Polymporphic Types
            -Relation::enforceMorphMap()
    - 04:58:10 Lazy and Eager Loading
    - 05:04:45 Querying Relations
    - 05:08:55 Aggregating Relations
    - 05:11:00 Eloquent Collection
        - https://laravel.com/docs/10.x/eloquent-collections#available-methods
    - 05:16:50 Accessors & Mutators
    - 05:31:00 Attribute Casting
    - 05:35:45 Custome Casts
        php artisan make:cast NamaCasts
    - 05:46:40 Serialization
    - 05:55:45 Factory
        php artisan make:factory NamaFactory
    - 06:09:30 Memperbaiki Unit Test
